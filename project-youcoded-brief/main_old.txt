let data=[]
let modal_edit=''
let data2=[];
let title,type,preority,date_created,description,statuss;
let myTodo=document.querySelector('.my-table-todo');
let myNow=document.querySelector('.my-table-now');
let myDone=document.querySelector('.my-table-done');

let featured=document.getElementById('Featured')
let bug=document.getElementById('Bug')
let arr_prority=Array.from(document.querySelector('.preority'))
let arr_status=Array.from(document.querySelector('.status'))
    
    //Event Submit
    document.querySelector('.submit').addEventListener('click',(e)=>{
        e.preventDefault()
        /*console.log(title)console.log(type)console.log(date_created)console.log(description)*/
        Create();
        Read();
        document.getElementById('form-add').reset()
    })

    function Create(){
        let storage=JSON.parse(localStorage.getItem('data'));
        title=document.getElementById('title').value 
        if(featured.checked){type=featured.id }
        if(bug.checked){type=bug.id}
        date_created=document.getElementById('date').value 
        description=document.getElementById('description').value 
        arr_prority.forEach((item)=>{
            if(item.selected){
                preority=item.value 
                //console.log(preority)
            }
        })
        arr_status.forEach((item)=>{
            if(item.selected){
                statuss=item.value
                //console.log(statuss)
            }
        })
        if(title==''){
        alert('write the Name')
        }else{
        if(storage==null){
            data.push({
                title:title,
                type:type,
                priority:preority,
                statuss:statuss,
                date_created:date_created,
                description:description
            })
            localStorage.setItem('data',JSON.stringify(data))
        }else{
            data=JSON.parse(localStorage.getItem("data"))
            
            data.push({
                title:title,
                type:type,
                priority:preority,
                statuss:statuss,
                date_created:date_created,
                description:description
            })
            localStorage.setItem('data',JSON.stringify(data))
        }
        }
    }
    function Read(){
        myTodo.innerHTML=''
        myNow.innerHTML=''
        myDone.innerHTML=''
        //data=localStorage.getItem('data')
        //console.log(data)
        data2=JSON.parse(localStorage.getItem('data'))
        console.log(data2)
        if(data2==null){
            myTodo.innerHTML+=`
            <h3 class="alert alert-danger">Empty</h3>
            `
            myNow.innerHTML+=`
            <h3 class="alert alert-danger">Empty</h3>
            `
            myDone.innerHTML+=`
            <h3 class="alert alert-danger">Empty</h3>
            `
        }else{
            for(let i=0;i<data2.length;i++){
                if(data2[i].statuss==="todo"){
                    myTodo.innerHTML+=`
                    <button 
                    data-bs-toggle="modal" 
					data-bs-target="#modal-task-edit-${i}" 
					data-bs-whatever="@mdo"   
                    class="task border-0 bg-white text-start d-flex border-bottom w-100 p-10px">
					<div class="col-1">
						<i style="font-size: 20px;" class="bi bi-question-circle text-success"></i>
					</div>
					<div class="col-11">
						<h6 class="card-title mt-1">${data2[i].title}</h6>
						<div class="">
							<div style="font-size:10px;" class="text-gray">#${i+1} created in ${data2[i].date_created}</div>
							<div 
                                style="font-size: 11px;" 
                                class="text-dark" 
                                title="There is hardly anything more frustrating than having to look for current requirements in tens of comments under the actual description or having to decide which commenter is actually authorized to change the requirements. The goal here is to keep all the up-to-date requirements and details in the main/primary description of a task. Even though the information in comments may affect initial criteria, just update this primary description accordingly."
                            >
                                ${data2[i].description}
                            </div>
						</div>
						<div class="">
							<span style="font-size: 8px;" class="btn-xs btn-primary py-1 px-2 rounded">${data2[i].type}</span>
						</div>
					</div>
				    </button>
                    `
                    modale_edit(i)
                    
                    
                }
                else if(data2[i].statuss==="now"){
                    myNow.innerHTML+=`
                    <button
                    data-bs-toggle="modal" 
					data-bs-target="#modal-task-edit-${i}" 
					data-bs-whatever="@mdo"    
                    class="task border-0 bg-white text-start d-flex border-bottom w-100 p-10px">
                        <div class="col-1">
                            <i style="font-size: 20px;" class="bi bi-question-circle text-success"></i>
                        </div>
                        <div class="col-11">
                            <h6 class="card-title mt-1">${data2[i].title}</h6>
                            <div class="">
                                <div style="font-size:10px;" class="text-gray">#${i+1} created in ${data2[i].date_created}</div>
                                <div 
                                    style="font-size: 11px;" 
                                    class="text-dark" 
                                    title="There is hardly anything more frustrating than having to look for current requirements in tens of comments under the actual description or having to decide which commenter is actually authorized to change the requirements. The goal here is to keep all the up-to-date requirements and details in the main/primary description of a task. Even though the information in comments may affect initial criteria, just update this primary description accordingly."
                                >
                                    ${data2[i].description}
                                </div>
                            </div>
                            <div class="">
                                <span style="font-size: 8px;" class="btn-xs btn-primary py-1 px-2 rounded">${data2[i].type}</span>
                            </div>
                        </div>
                    </button>
                    `
                    modale_edit(i)
                }else{
                    myDone.innerHTML+=`
                    <button 
                    data-bs-toggle="modal" 
					data-bs-target="#modal-task-edit-${i}" 
					data-bs-whatever="@mdo"
                    class="task border-0 bg-white text-start d-flex border-bottom w-100 p-10px">
                        <div class="col-1">
                            <i style="font-size: 20px;" class="bi bi-question-circle text-success"></i>
                        </div>
                        <div class="col-11">
                            <h6 class="card-title mt-1">${data2[i].title}</h6>
                            <div class="">
                                <div style="font-size:10px;" class="text-gray">#${i+1} created in ${data2[i].date_created}</div>
                                <div 
                                    style="font-size: 11px;" 
                                    class="text-dark" 
                                    title="There is hardly anything more frustrating than having to look for current requirements in tens of comments under the actual description or having to decide which commenter is actually authorized to change the requirements. The goal here is to keep all the up-to-date requirements and details in the main/primary description of a task. Even though the information in comments may affect initial criteria, just update this primary description accordingly."
                                >
                                    ${data2[i].description}
                                </div>
                            </div>
                            <div class="">
                                <span style="font-size: 8px;" class="btn-xs btn-primary py-1 px-2 rounded">${data2[i].type}</span>
                            </div>
                        </div>
                    </button>
                    `
                    modale_edit(i)
                }
           
           
            }
        }
    }

    
    Read()
    
  
    
    let I;
    function modale_edit(I){
        modal_edit+=`
        <div class="modal fade" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" id="modal-task-edit-${I}">
        <!-- Modal content goes here -->
		<div class="modal-dialog">
			<div class="modal-content">
			  <div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Edit Task Number ${I + 1}</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			  </div>
			  <div class="modal-body">
				<form onload="Read()" id="form-add">
				  <div class="mb-3">
					<label for="recipient-name" class="col-form-label">Title:</label>
					<input value="${data2[I].title}" type="text" id="title-edit" class="form-control">
				  </div>
				  <div class="mb-3 d-flex flex-column">
					<label for="recipient-name" class="col-form-label">Type:</label>
					<div class="my-1 mx-2">
						<input  ${data2[I].type=="Featured" ? 'checked' : ''} id="Featured-edit featured" class="check-input one" class="form-check-input" type="radio" name="flexRadioDefault">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Featured
                        </label>
					</div>
					<div class="my-1 mx-2">
						<input ${data2[I].type=="Bug" ? 'checked' : ''} id="Bug-edit bug" class="check-input two"  class="form-check-input" type="radio" name="flexRadioDefault">
					    <label class="form-check-label" for="flexRadioDefault1">
                            Bug 
                        </label>
					</div>
				  </div>
				  <div class="mb-3">
					<label for="message-text" class="col-form-label">Preority:</label>
					<select id="preority-edit" class="form-select preority" aria-label="Default select example">
						<option value="please selected" selected>Please Select</option>
						<option ${data2[I].statuss=="one" ? 'selected' : ''} value="one">One</option>
						<option ${data2[I].statuss=="two" ? 'selected' : ''} value="two">Two</option>
						<option ${data2[I].statuss=="three" ? 'selected' : ''} value="three">Three</option>
					</select>
				  </div>
				  <div class="mb-3">
					<label for="message-text" class="col-form-label">Status:</label>
					<select id="status-edit" class="form-select status" aria-label="Default select example">
						<option value="lease select sttus"  selected>Please Select</option>
						<option ${data2[I].statuss=="todo" ? 'selected' : ''} value="todo">Todo</option>
						<option ${data2[I].statuss=="now"  ? 'selected' : ''} value="now">Now</option>
						<option ${data2[I].statuss=="done" ? 'selected' : ''}  value="done">Done</option>
					</select>
				  </div>
				  <div class="mb-3">
					<label class="col-form-label" for="date">
                        Date 
					</label>
					<input id="date-edit" class="form-control" type="date">
				  </div>
				  <div class="mb-3">
					<label for="message-text" class="col-form-label">Description</label>
					<textarea id="description-edit" class="form-control">
                        ${data2[I].description}
                    </textarea>
				  </div>
				</form>
			  </div>
			  <div class="modal-footer d-flex justify-content-between">
                <div>
				    <button onClick="Delete(${I})"  type="button" class="submit btn btn-danger">Delete</button>
                </div>
				<div>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				    <button type="button" class="submit btn btn-success">Edit</button>
                </div>
			  </div>
			</div>
		  </div>
	    </div>
        `
        document.getElementById('modal').innerHTML=modal_edit
        //return modal_edit
    }

    //modale_edit()
















/*
for(let i=0 ; i<6;i++){
    data.push({
        name:'mugiwara',
        last:'luffy',
        number:68
    })
}

console.log(data)
*/